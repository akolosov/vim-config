{"name":"vim-config","tagline":"My VIM configuration","body":"vim-config\r\n==========\r\n\r\nTo install just run in terminal:\r\n\r\n```bash\r\ncurl https://raw.githubusercontent.com/akolosov/vim-config/master/scripts/bootstrap.sh -L -o - | sh\r\n```\r\n\r\n... wait until successfully installed and have fun with VIM!\r\n\r\nInspired by [spf13-vim](http://vim.spf13.com/) and [YADR](http://skwp.github.io/dotfiles/) - thanks guys!\r\n\r\n\r\nScreenshots\r\n===========\r\n![1](https://cloud.githubusercontent.com/assets/158733/4518806/230a1596-4c9f-11e4-9069-5aabb536aff2.png)\r\n![2](https://cloud.githubusercontent.com/assets/158733/4518807/23103d36-4c9f-11e4-8f88-751d95bb1673.png)\r\n![3](https://cloud.githubusercontent.com/assets/158733/4518805/23085a1c-4c9f-11e4-9e98-95d6cc84bed6.png)\r\n\r\n\r\nVariables\r\n=========\r\n\r\nAll variables set in `~/.vimrc.before.local` file.\r\n\r\n`g:hardcore_mode` - use VIM Hardcore mode (unset `g:use_ArrowKeys`, `g:use_CopyCutPasteKeys`, `g:use_ctrlSpace`, `g:use_VimShell` and many keymaps)\r\n\r\n`g:use_lightline` - Use LightLine instead AirLine\r\n\r\n`g:use_powerline_fonts` - Use PowerLine fonts ([Link](https://github.com/Lokaltog/powerline-fonts))\r\n\r\n`g:color_scheme` - Your favorite color scheme name (default: hybrid)\r\n\r\n`g:airline_theme` - Your favorite AirLine theme (default: bubblegum)\r\n\r\n`g:lightline_theme` - Your favorite LightLine theme (default: hybrid)\r\n\r\n`g:use_relativenumber` - Use relative line numbers\r\n\r\n`g:use_ctrlSpace` - use CtrlSpace plugin instead CtrlP\r\n\r\n`g:use_VimShell` - use VimShell plugin\r\n\r\n`g:dont_use_NERDTree` - do not use NERDTree plugin\r\n\r\n`g:dont_show_NERDTree` - do not show NERDTree on startup\r\n\r\n`g:use_ArrowKeys` - use arrow keys. Only hjkl! Only hardcore!\r\n\r\n`g:use_CopyCutPasteKeys` - use Ctrl-C/V/X keys for Copy/Paste/Cut\r\n\r\n\r\nShortcuts\r\n=========\r\n\r\n| **Shortcut** | **Description** | **Modes** |\r\n|:------------:|-----------------|:---------:|\r\n| `CTRL-T` | Create new tab (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `CTRL-Z` | Show/Hide UndoTree (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `CTRL-G` | Show/Hide TagBar (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `CTRL-Y` | Delete line (if not set `g:hardcore_mode`) |\t**\\[n i v]** |\r\n| `CTRL-L` | Delete to EOL (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `CTRL-H` | Delete to BOL (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `CTRL-X` or `SHIFT-Del` | Cut (if set `g:use_CopyCutPasteKeys` and not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `CTRL-C` or `CTRL-Ins` | Copy (if set `g:use_CopyCutPasteKeys` and not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `CTRL-V` or `SHIFT-Ins` | Paste (if set `g:use_CopyCutPasteKeys` and not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `CTRL-/` or `CTRL-7` | Comment/Uncomment block (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `CTRL-\\` or `CTRL-4` | Show/Hide YankRing (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `CTRL-Space` | Open CtrlSpace buffers (if set `g:use_ctrlSpace` and not set `g:hardcore_mode`) | **\\[n]** |\r\n| `F2` | Save file (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `CTRL-F2` | Save all files (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `SHIFT-F2` | Save file as... (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `F3` | Toggle paste mode (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `F4` | Toggle readonly mode (if not set `g:hardcore_mode`) | **\\[n v]** |\r\n| `F5` | Open the selected region in a new narrowed window (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `F10` | Quit without saving (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `SHIFT-F10` | Quit with saving all files (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `ESC-ESC` | Quit and ask for save files or close current window/buffer (if not set `g:hardcore_mode`) | **\\[n i v]** |\r\n| `//` | No highlights search | **\\[n v]** |\r\n| `CTRL-]` | Switch next tab (if not set `g:hardcore_mode`) | **\\[n v]** |\r\n| `CTRL-[` | Switch prev tab (if not set `g:hardcore_mode`) | **\\[n v]** |\r\n| `]` | Switch next buffer (if not set `g:hardcore_mode`) | **\\[n v]** |\r\n| `[` | Switch prev buffer (if not set `g:hardcore_mode`) | **\\[n v]** |\r\n| `ALT-Up` | Upcase word under cursor (if not set `g:hardcore_mode`) | **\\[n v]** |\r\n| `ALT-Down` | Downcase word under cursor (if not set `g:hardcore_mode`) | **\\[n v]** |\r\n| `<tilde><tilde>` | Run VimShell (if set `g:use_VimShell` and not set `g:hardcore_mode`) | **\\[n v]** |\r\n| `'` | Toggle single quotes to double quotes and backwards (if not set `g:hardcore_mode`) | **\\[n]** |\r\n| `,,` or `,o` | Open CtrlP (if not set `g:use_ctrlSpace`) | **\\[n]** |\r\n| `..` or `,b` | Open CtrlP buffers (if not set `g:use_ctrlSpace`) | **\\[n]** |\r\n| `''` or `CTRL-6` | \" Switch between the last two files | **\\[n]** |\r\n| `,?` | Show most plugin keybindings (if not set `g:hardcore_mode`) | **\\[n]** |\r\n| `,hh` | Split window horizontaly (if not set `g:hardcore_mode`) | **\\[n]** |\r\n| `,vv` | Split window verticaly (if not set `g:hardcore_mode`) | **\\[n]** |\r\n| `,<Down>` | Insert new line after current line (if not set `g:hardcore_mode`) | **\\[n]** |\r\n| `,<Up>` | Insert new line before current line (if not set `g:hardcore_mode`) | **\\[n]** |\r\n| `,<CR>` |  Toggle show Space/Tab/EOL (if not set `g:hardcore_mode`) | **\\[n]** |\r\n| `,a` | Select all text in current buffer (if not set `g:hardcore_mode`) | **\\[n]** |\r\n| `,w` | Save current file | **\\[n v]** |\r\n| `,wa` | Save all files  | **\\[n v]** |\r\n| `,w?` | Save file as... | **\\[n v]** |\r\n| `,tb` | Switch all buffers to tabs | **\\[n]** |\r\n| `,sb` | Switch all buffers to windows | **\\[n v]** |\r\n| `,nd` | Show/Hide NERDTree (if not set `g:dont_use_NERDTree`)  | **\\[n i v]** |\r\n| `,nf` | Show current file in NERDTree (if not set `g:dont_use_NERDTree`) | **\\[n]** |\r\n| `,.` | Go to last edit location | **\\[n]** |\r\n| `,cd` | Set working directory to current opened file's directory | **\\[n]** |\r\n| `,ee` | Opens an edit command with the path of the currently edited file filled in | **\\[n]** |\r\n| `,te` | Opens a tab edit command with the path of the currently edited file filled in | **\\[n]** |\r\n| `,qc` | Toggle Quickfix window | **\\[n]** |\r\n| `,qo` | Open Quickfix window back up | **\\[n]** |\r\n| `,gf` | Open file with filename under cursor, create new if not exists (if not set `g:hardcore_mode`) | **\\[n]** |\r\n| `,gfw` | Open file in windows with filename under cursor, create new if not exists (if not set `g:hardcore_mode`) | **\\[n]** |\r\n| `,gft` | Open file in tab with filename under cursor, create new if not exists (if not set `g:hardcore_mode`) | **\\[n]** |\r\n| `,#` | Surround a word with #{ruby interpolation} | **\\[n v]** |\r\n| `,\"` | Surround a word with \"quotes\" | **\\[n v]** |\r\n| `,'` | Surround a word with 'single quotes' | **\\[n v]** |\r\n| `,(` or `,)` | Surround a word with (parens) | **\\[n v]** |\r\n| `,[` or `,]` | Surround a word with [brackets] | **\\[n v]** |\r\n| `,{` or `,}` | Surround a word with {braces} | **\\[n v]** |\r\n| `,rw` | Overwrite word, replace a word with what's in the yank buffer | **\\[n v]** |\r\n| `,sw` | Swaps word under cursor and next word in line | **\\[n v]** |\r\n| `,db` | Delete blank lines | **\\[n v]** |\r\n| `,l'` | Surround every line in the file or selected lines with ' | **\\[n v]** |\r\n| `,l\"` | Surround every line in the file or selected lines with \" | **\\[n v]** |\r\n| `,l(` | Surround every line in the file or selected lines with () | **\\[n v]** |\r\n| `,l[` | Surround every line in the file or selected lines with \\[] | **\\[n v]** |\r\n| `,l{` | Surround every line in the file or selected lines with {} | **\\[n v]** |\r\n| `,ss` | Strip trailing whitespace | **\\[n v]** |\r\n| `,st` | Make selected text Stringify() | **\\[n v]** |\r\n| `,sp` | Split line by tags/keywords (using SplitJoin.vim) | **\\[n v]** |\r\n| `,sj` | Join lines by tags/keywords (using SplitJoin.vim) | **\\[n v]** |\r\n| `,sf` | Search word under cursor or selected word entire files in current directory (recursively) | **\\[n v]** |\r\n| `,sr` | Search word under cursor and replace with user inputs | **\\[n v]** |\r\n| `,s[` | Select inside [] include brackets  | **\\[n v]** |\r\n| `,s]` | Select inside [] | **\\[n v]** |\r\n| `,s{` | Select inside {} include brackets | **\\[n v]** |\r\n| `,s}` | Select inside {} | **\\[n v]** |\r\n| `,s(` | Select inside () include brackets | **\\[n v]** |\r\n| `,s)` | Select inside () | **\\[n v]** |\r\n| `,s<` | Select inside <> include brackets | **\\[n v]** |\r\n| `,s>` | Select inside <> | **\\[n v]** |\r\n| `,s\"` | Select inside \" | **\\[n v]** |\r\n| `,s'` | Select inside ' | **\\[n v]** |\r\n| `,yw` | Yank word under cursor | **\\[n]** |\r\n| `,yl` | Yank current line | **\\[n]** |\r\n| `,ls` | Send current line to console (tmux by default) | **\\[n]** |\r\n| `,ms` | Send current motion to console (tmux by default) | **\\[n]** |\r\n| `,rs` | Send current selection to console (tmux by default) | **\\[v]** |\r\n| `,gs` | git status | **\\[n]** |\r\n| `,gd` | git diff | **\\[n]** |\r\n| `,gc` | git commit | **\\[n]** |\r\n| `,gl` | git pull | **\\[n]** |\r\n| `,gp` | git push | **\\[n]** |\r\n| `,gpa` | git push --all | **\\[n]** |\r\n| `,ga` | git add %currentfile% | **\\[n]** |\r\n| `,gu` | git add all untracked files | **\\[n]** |\r\n| `,g?` | git add user input files | **\\[n]** |\r\n| `,gb` | git blame | **\\[n]** |\r\n| `,gr` | git remove %currentfile% | **\\[n]** |\r\n| `,ag` | Search in files, using ag | **\\[n]** |\r\n| `,af` | Search file, using ag | **\\[n]** |\r\n| `,ocf` | Open changed files (by git status) | **\\[n]** |\r\n| `,orb` | Select Outer-Ruby-Block | **\\[n]** |\r\n| `,t=` | Align assignments (don't count logic, like == or !=) | **\\[n v]** |\r\n| `,t,` | Align on commas | **\\[n v]** |\r\n| `,t<pipe>` | Align on vertical bars/pipes | **\\[n v]** |\r\n| `,tsp` | Align on whitespace | **\\[n v]** |\r\n| `mm` | Toggle bookmark | **\\[n]** |\r\n| `mi` | Annotate bookmark | **\\[n]** |\r\n| `ma` | Show all bookmarks | **\\[n]** |\r\n| `mj` | Go to next bookmark | **\\[n]** |\r\n| `mk` | Go to prev bookmark | **\\[n]** |\r\n| `mc` | Clear bookmarks | **\\[n]** |\r\n| `mx` | Clear all bookmarks | **\\[n]** |\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}