" Before initialization

function! BundleExists(section, bundle)
  return (index(g:use_bundles[a:section], a:bundle) >= 0)
endfunction

function! AddBundle(section, bundle)
	if index(g:use_bundles[a:section], a:bundle) < 0
		call add(g:use_bundles[a:section], a:bundle)
	endif
endfunction

function! RemoveBundle(section, bundle)
	if index(g:use_bundles[a:section], a:bundle) >= 0
		call remove(g:use_bundles[a:section], index(g:use_bundles[a:section], a:bundle))
	endif
endfunction

let g:use_bundles = {
	\ "apperances": ["common", "airline", "numbers", "indentline"],
	\ "languages": ["common", "ruby", "go", "javascript", "textobjects", "html/css"]
	\}

if !exists('g:hardcore_mode') && !exists("g:hardcore_mode_with_arrow_keys")
	let g:use_bundles.autocomplete = ["common", "youcompleteme"]
	let g:use_bundles.tools = ["common", "tagbar", "ctrlp", "commenter", "git", "scratch", "undotree", "search"]
else
	if exists('g:use_arrow_keys')
		unlet g:use_arrow_keys
	endif

	if exists('g:use_copy_cut_paste_keys')
		unlet g:use_copy_cut_paste_keys
	endif

	let g:use_bundles.tools = []
	let g:use_bundles.autocomplete = []
endif

