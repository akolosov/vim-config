if BundleExists("languages", "common")
  Bundle "scrooloose/syntastic.git"

  let g:languages_common = 1
endif

if BundleExists("languages", "scala")
  Bundle "derekwyatt/vim-scala"
  Bundle "derekwyatt/vim-sbt"
  Bundle "xptemplate"

  let g:languages_scala = 1
endif

if BundleExists("languages", "elixir")
  Bundle "elixir-lang/vim-elixir"
  Bundle "carlosgaldino/elixir-snippets"
  Bundle "mattreduce/vim-mix"

  let g:languages_elixir = 1
endif

if BundleExists("languages", "haskell")
  Bundle "travitch/hasksyn"
  Bundle "dag/vim2hs"
  Bundle "Twinside/vim-haskellConceal"
  Bundle "Twinside/vim-haskellFold"
  Bundle "lukerandall/haskellmode-vim"
  Bundle "eagletmt/neco-ghc"
  Bundle "eagletmt/ghcmod-vim"
  Bundle "adinapoli/cumino"
  Bundle "bitc/vim-hdevtools"

  let g:languages_haskell = 1
endif

if BundleExists("languages", "javascript")
  Bundle "briancollins/vim-jst"
  Bundle "pangloss/vim-javascript"
  Bundle "othree/javascript-libraries-syntax.vim"
  Bundle "claco/jasmine.vim"
  Bundle "digitaltoad/vim-jade.git"
  Bundle "itspriddle/vim-jquery.git"
  Bundle "kchmck/vim-coffee-script"
  Bundle "elzr/vim-json"

  let g:languages_javascript = 1
endif

if BundleExists("languages", "markdown")
  Bundle "jtratner/vim-flavored-markdown.git"
  Bundle "nelstrom/vim-markdown-preview"
  Bundle "tpope/vim-markdown"
  Bundle "spf13/vim-preview"

  let g:languages_markdown = 1
endif

if BundleExists("languages", "html/css")
  Bundle "groenewege/vim-less.git"
  Bundle "skwp/vim-html-escape"
  Bundle "rstacruz/sparkup"
  Bundle "amirh/HTML-AutoCloseTag"
  Bundle "hail2u/vim-css3-syntax"
  Bundle "gorodinskiy/vim-coloresque"

  let g:languages_html_css = 1
endif

if BundleExists("languages", "go")
  Bundle "fatih/vim-go"
  Bundle "rhysd/vim-go-impl"

  let g:languages_go = 1
endif

if BundleExists("languages", "ruby")
  Bundle "tpope/vim-haml"
  Bundle "ecomba/vim-ruby-refactoring"
  Bundle "tpope/vim-rails.git"
  Bundle "tpope/vim-rake.git"
  Bundle "tpope/vim-rvm.git"
  Bundle "vim-ruby/vim-ruby.git"
  Bundle "Keithbsmiley/rspec.vim"
  Bundle "skwp/vim-iterm-rspec"
  Bundle "skwp/vim-spec-finder"
  Bundle "ck3g/vim-change-hash-syntax"
  Bundle "tpope/vim-bundler"
  Bundle "tpope/vim-cucumber"

  let g:languages_ruby = 1
endif

if BundleExists("languages", "textobjects")
  Bundle "austintaylor/vim-indentobject"
  Bundle "bootleq/vim-textobj-rubysymbol"
  Bundle "coderifous/textobj-word-column.vim"
  Bundle "kana/vim-textobj-datetime"
  Bundle "kana/vim-textobj-entire"
  Bundle "kana/vim-textobj-function"
  Bundle "kana/vim-textobj-user"
  Bundle "lucapette/vim-textobj-underscore"
  Bundle "nelstrom/vim-textobj-rubyblock"
  Bundle "thinca/vim-textobj-function-javascript"
  Bundle "vim-scripts/argtextobj.vim"
  Bundle "wellle/targets.vim"
  Bundle "reedes/vim-litecorrect"
  Bundle "reedes/vim-textobj-sentence"
  Bundle "reedes/vim-textobj-quote"
  Bundle "reedes/vim-wordy"

  let g:languages_textobjects = 1
endif

if BundleExists("languages", "python")
  Bundle "klen/python-mode"
  Bundle "yssource/python.vim"
  Bundle "python_match.vim"
  Bundle "pythoncomplete"

  let g:languages_python = 1
endif

if BundleExists("languages", "php")
  Bundle "spf13/PIV"
  Bundle "arnaud-lb/vim-php-namespace"
  Bundle "beyondwords/vim-twig"

  let g:languages_php = 1
endif

if BundleExists("languages", "other")
  Bundle "PotatoesMaster/i3-vim-syntax"
  Bundle "sheerun/vim-polyglot"
  Bundle "wting/rust.vim"
  Bundle "cespare/vim-toml"
  Bundle "saltstack/salt-vim"

  let g:languages_other = 1
endif

